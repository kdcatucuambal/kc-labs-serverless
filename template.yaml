AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  kc-labs-serverless

  Sample SAM Template for kc-labs-serverless

Parameters:
  EnvironmentId:
    Type: String
    Description: Environment ID
    Default: kec

  LambdaAliasProduction:
    Type: String
    Description: Lambda Alias for Production
    Default: production

  LambdaAliasBeta:
    Type: String
    Description: Environment alias
    Default: beta

  LogRetentionInDays:
    Type: Number
    Description: Log retention in days
    Default: 5
  
  ProvisionedConcurrencyConfigEnabled:
    Type: String
    Description: Enable Provisioned Concurrency Config
    Default: "false"

Conditions:
  LambdaProvisioned: !Equals [!Ref ProvisionedConcurrencyConfigEnabled, "true"]


Globals:
  Function:
    CodeUri: kc-labs-app/target/original-kc-labs-app-1.0.jar
    Timeout: 20
    Tracing: Active
    Runtime: java11
    MemorySize: 512
    Architectures:
      - x86_64
    Environment:
      Variables:
        message: "Hello from Lambda"
  Api:
    TracingEnabled: True

Resources:
  LabsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Join
        - ""
        - - !Ref EnvironmentId
          - labs-layer
      Description: Layer libs for kc-labs-serverless
      ContentUri: kc-labs-app/dependencies
      CompatibleRuntimes:
        - java11
        - java8
      CompatibleArchitectures:
        - x86_64
      LicenseInfo: "MIT"
      RetentionPolicy: Retain

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      # AccessLogSetting:
      #   DestinationArn: !GetAtt LabsApiGatewayLogGroup.Arn
      StageName: v1
      Variables:
        version_alias: !Ref LambdaAliasProduction
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./specs/labs_api.yaml

  LabsDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref ApiGatewayApi

  # LabsApiGatewayLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "API-Gateway-Execution-Logs_${ApiGatewayApi}/v1"
  #     RetentionInDays: !Ref LogRetentionInDays

  LabsGreetingsGETHelloLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.kc.cloud.labs.aws.lambda.greetings.LabsGreetingsGETHello::handleRequest
      FunctionName: !Sub "${EnvironmentId}-LabsGreetingsGETHelloLambda"
      Layers:
        - !Ref LabsLayer
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        EventApi:
          Type: Api
          Properties:
            Path: /labs/greetings/hello
            Method: get
            RestApiId: !Ref ApiGatewayApi

  LabsGreetingGETNameLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.kc.cloud.labs.aws.lambda.greetings.LabsGreetingGETName::handleRequest
      FunctionName: !Sub "${EnvironmentId}-LabsGreetingGETNameLambda"
      Layers:
        - !Ref LabsLayer
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        EventApi:
          Type: Api
          Properties:
            Path: /labs/greetings/name/{value}
            Method: get
            RestApiId: !Ref ApiGatewayApi

  LabsBalancesGETByIdLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.kc.cloud.labs.aws.lambda.balances.LabsBalancesGETById::handleRequest
      FunctionName: !Sub "${EnvironmentId}-LabsBalancesGETByIdLambda"
      Layers:
        - !Ref LabsLayer
      Role: !GetAtt LabsRole.Arn
      AutoPublishAlias: !Ref LambdaAliasBeta
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        EventApi:
          Type: Api
          Properties:
            Path: /labs/balances/{id}
            Method: get
            RestApiId: !Ref ApiGatewayApi
  
  LabsBalancesGETByIdAliasProduction:
    Type: AWS::Lambda::Alias
    Properties:
      Description: "Lambda alias for production"
      FunctionName: !Ref LabsBalancesGETByIdLambda
      FunctionVersion: !Select [ 7, !Split [ ":", !Ref LabsBalancesGETByIdLambda.Version ] ]
      Name: !Ref LambdaAliasProduction
      ProvisionedConcurrencyConfig:
        !If
          - LambdaProvisioned
          - ProvisionedConcurrentExecutions: 2
          - Ref: AWS::NoValue
  
  LabsBalancesGETByIdLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LabsBalancesGETByIdLambda}"
      RetentionInDays: !Ref LogRetentionInDays

  LabsBalancesGETByIdProductionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "${LabsBalancesGETByIdLambda}:${LambdaAliasProduction}"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}*/*/*"

  LabsBalancesGETAllLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.kc.cloud.labs.aws.lambda.balances.LabsBalancesGETAll::handleRequest
      FunctionName: !Sub "${EnvironmentId}-LabsBalancesGETAllLambda"
      Layers:
        - !Ref LabsLayer
      Role: !GetAtt LabsRole.Arn
      AutoPublishAlias: !Ref LambdaAliasBeta
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        EventApi:
          Type: Api
          Properties:
            Path: /labs/balances
            Method: get
            RestApiId: !Ref ApiGatewayApi

  LabsBalancesGETAllAliasProduction:
    Type: AWS::Lambda::Alias
    Properties:
      Description: "Lambda alias for production"
      FunctionName: !Ref LabsBalancesGETAllLambda
      FunctionVersion: !Select [ 7, !Split [ ":", !Ref LabsBalancesGETAllLambda.Version ] ]
      Name: !Ref LambdaAliasProduction
      ProvisionedConcurrencyConfig:
        !If
          - LambdaProvisioned
          - ProvisionedConcurrentExecutions: 2
          - Ref: AWS::NoValue

  LabsBalancesGETAllLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LabsBalancesGETAllLambda}"
      RetentionInDays: !Ref LogRetentionInDays

  LabsBalancesGETAllProductionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "${LabsBalancesGETAllLambda}:${LambdaAliasProduction}"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}*/*/*"

  LabsRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${EnvironmentId}-LabsRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: !Sub "${EnvironmentId}-LabsPolicy" 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:AssignPrivateIpAddresses"
                  - "ec2:UnassignPrivateIpAddresses"
                  - "xray:PutTraceSegments"
                  - "xray:PutTelemetryRecords"
                  - "xray:GetSamplingRules"
                  - "xray:GetSamplingTargets"
                  - "xray:GetSamplingStatisticSummaries"
                Resource: "*"



Outputs:
  LabsBalancesGETByIdLambdaVersion:
    Description: "LabsBalancesGETByIdLambda version"
    Value: !Sub "${LabsBalancesGETByIdLambda.Version}"

  RoleArn:
    Description: "LabsRole Arn 1"
    Value: !GetAtt LabsRole.Arn
  
  RoleArn2:
    Description: "LabsRole Arn 2"
    Value: !Sub "${LabsRole.Arn}"